@page "/countries/edit/{Id:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Editar Pais</h3>

@if(country is null)
{
    <p>Cargando ...</p>
}
else
{
    <CountryForm Country="country" OnSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private Country? country;


    [Parameter]
    public int Id {get;set;}

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>($"api/countries/{Id}");

        if (responseHttp.Error)
        {
            if(responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("countries");
            }
            else
            {
                var message = await responseHttp.GetErrorMessageAsync();
                await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            }
        }
        else
        {
            country = responseHttp.Response;
        }
    }

    private async Task EditAsync()
    {
        var responseHttp = await repository.Put("api/countries", country);
    }
    private void Return()
    {

    }
}
